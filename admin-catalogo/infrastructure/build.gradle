buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath ('org.flywaydb:flyway-mysql:8.5.10')
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '8.5.10'
}

group = 'br.landucci.admin.catologo.infrastructure'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))
//    implementation("io.vavr:vavr:0.10.4")

    implementation ('com.mysql:mysql-connector-j:8.2.0')

    implementation ('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0')

    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation ('org.springframework.boot:spring-boot-starter-undertow')
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')

    implementation ('com.fasterxml.jackson.module:jackson-module-afterburner')

    implementation('org.yaml:snakeyaml:1.33') {
        version { strictly("1.33") }
    }

    testImplementation(project(path: ':domain', configuration: 'testClasses'))
    testImplementation ('org.flywaydb:flyway-core')

    testImplementation ('org.springframework.boot:spring-boot-starter-test')

    testImplementation ('org.testcontainers:testcontainers:1.19.4')
    testImplementation ('org.testcontainers:mysql:1.19.4')
    testImplementation ('org.testcontainers:junit-jupiter:1.19.4')

    testRuntimeOnly ('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos_dev'
    user = System.getenv('FLYWAY_USER') ?: 'codeflix'
    password = System.getenv('FLYWAY_PASS') ?: 'C0d3Fl1x'
}

test {
    useJUnitPlatform()
}